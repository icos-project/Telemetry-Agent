#  ICOS Telemetry Agent
#  Copyright Â© 2022-2024 Engineering Ingegneria Informatica S.p.A.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#  This work has received funding from the European Union's HORIZON research 
#  and innovation programme under grant agreement No. 101070177.



# -- empty endpoint by default. Exporting of metrics is disabled
telemetryControllerEndpoint:


#
# Functionalities
#


# -- enable the scraping of Prometheus targets
# @section -- Features
scrapePrometheusTargets: true
# -- interval for running the discovery of targets 
# @section -- Prometheus
prometheusTargetsDiscoveryInterval: 60s

# -- enable Kubernetes metrics generated by the OpenTelemetry Collector 
# @section -- Features
enableKubeletstatsReceiver: true


otel-cluster-collector:
  enabled: false
  image:
    repository: harbor.res.eng.it/icos/meta-kernel/observability/otel-collector-icos-distribution
    tag: 1.2.0-v0.92.0
    command:
    - /otelcol-icos
    - --config=/conf/otel-config.yaml
  service:
    ports:
      otlp:
        containerPort: 4317

telemetruum-kube-agent:
  # -- Enable Telemetruum Agent
  # @section -- Features
  enabled: true
  image:
    repository: harbor.res.eng.it/icos/meta-kernel/observability/telemetruum-agent
    tag: 0.1.0
  metrics:
    workloads:
      interval: 60s
    orchestrator:
      interval: 2m
    host:
      interval: 5m
  extraArgs:
    - --ip-hint
    - "{{ tpl .Values.telemetryControllerEndpoint . }}"
  service:
    annotations:
      telemetry.icos.eu/scrape: "true"
      telemetry.icos.eu/interval: "60s"
    ports:
      metrics:
        containerPort: "2545"

logs:
  # -- enable reading of logs
  # @section -- Features
  enabled: false
  journald:
    # -- Enable Journald collection
    # @section -- Logs
    enabled: true
    fsGroupId: 101
    directory: /var/log/journal
    priority: info
    units: ['ssh']
  pods:
    # -- enable collection of pod's logs
    # @section -- Logs
    enabled: true
  files:
    # -- enable reading of files from the filesystem
    # @section -- Logs
    enabled: true

otel-node-agent:
  enabled: true
  image:
    repository: harbor.res.eng.it/icos/meta-kernel/observability/otel-collector-icos-distribution
    tag: 1.2.0-v0.92.0
    command:
    - /otelcol-icos
    - --config=/conf/otel-config.yaml
  # allow to deploy also on the master
  #tolerations:
  #- effect: NoSchedule
  #  operator: Exists
  service:
    ports:
      otlp:
        containerPort: 4317


#
# Third-party expoters
#

kube-state-metrics:
  # -- enable Kube State Metrics plugin
  # @section -- Features
  enabled: true
  metricAnnotationsAllowList:
  - pods=[app.icos.eu/name,app.icos.eu/component,app.icos.eu/instance]
  service:
    annotations:
      telemetry.icos.eu/scrape: "true"
      telemetry.icos.eu/interval: "120s"

prometheus-node-exporter:
  enabled: true
  extraArgs:
    - '--collector.disable-defaults'
    - '--collector.cpu'
    - '--collector.filesystem'
    - '--collector.loadavg'
    - '--collector.meminfo'

  service:
    annotations:
      telemetry.icos.eu/scrape: "true"
      telemetry.icos.eu/interval: "60s"

otel-target-allocator:
  image:
    repository: otel/target-allocator
    tag: v0.94.0
    #repository: harbor.res.eng.it/icos/meta-kernel/observability/otel-target-allocator-custom
    #tag: 0.2-otelop20240204
  service:
    ports:
      http:
        containerPort: 8080
        servicePort: 80

scaphandre:
  # -- Enable Scaphandre
  # @section -- Features
  enabled: false

icos-nfd:
  # -- Enable Node Feature Discovery
  # @section -- Features
  enabled: true